/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    id "au.com.dius.pact" version "3.6.2"
}



repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version:'4.5.1'
    compile group: 'org.json', name: 'json', version:'20171018'
    compile 'com.google.guava:guava:27.0.1-jre'
	compile 'io.vertx:vertx-core:3.5.0'
    compile 'io.vertx:vertx-web:3.5.0'
    compile("au.com.dius:pact-jvm-consumer-junit_2.12:3.6.2")
    compile("au.com.dius:pact-jvm-consumer-java8_2.12:3.6.2")
    compile("au.com.dius:pact-jvm-provider-junit5_2.12:3.6.2")
    compile("au.com.dius:pact-jvm-provider-junit_2.12:3.6.2")
    compile("org.scala-lang:scala-reflect:2.12.1")
    compile("org.scala-lang:scala-compiler:2.12.1")
    compile("org.scala-lang:scala-library:2.12.1")
    compile("javax.xml.bind:jaxb-api:2.2.11")
    compile("com.sun.xml.bind:jaxb-core:2.2.11")
    compile("com.sun.xml.bind:jaxb-impl:2.2.11")
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.1.0"
    // Use JUnit test framework
    compile 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()    
}

mainClassName = 'io.vertx.core.Launcher'

pact {
	//Run pactPublish task IF you need to publish the Pact files to the broker. Provide the pactUrl, pactUser, pactPassword in Gradle.properties file
		publish {
			version = "2.0.1"
			pactDirectory = 'pacts' // defaults to $buildDir/pacts
			//pactBrokerUrl = 'https://cpramik.pact.dius.com.au'
			pactBrokerUrl = 'http://localhost:80'
			//pactBrokerUsername = 'rkoi3a2zofejmvwdqrlnoa'
			//pactBrokerPassword = 'cl1273g7akvjzzyyhn712'
		}
		
		serviceProviders {  
		    // You can define as many as you need, but each must have a unique name
		    userservice {
		        // All the provider properties are optional, and have sensible defaults (shown below)
		        protocol = 'http'
		        host = 'localhost'
				port = 8081
		        project.version = "2.0.1"
				
				//Verifying pact from Local. Comment the below lines and uncomment hasPactsFromPactBroker if you need to verify results from broker
				/*hasPactsWith('test_consumer') {
		            pactFileLocation = file('pacts') 
				}*/
				
				//Run pactVerify task if you need to send the verification results back to PactBroker. Provide the pactUrl, pactUser, pactPassword in Gradle.properties file
				//You need to publish Pact to broker first by running pactPublish command
				
				//hasPactsFromPactBroker('https://cpramik.pact.dius.com.au', authentication: ['Basic','rkoi3a2zofejmvwdqrlnoa', 'cl1273g7akvjzzyyhn712'])
				hasPactsFromPactBroker('http://localhost:80')
			}
		}
		
		reports {
		      defaultReports() // adds the standard console output
		      markdown // report in markdown format
		      json // report in json format
		} 
}